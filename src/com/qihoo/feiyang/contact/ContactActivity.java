package com.qihoo.feiyang.contact;import java.util.ArrayList;import java.util.HashMap;import com.qihoo.feiyang.R;import android.app.Activity;import android.app.ProgressDialog;import android.content.Intent;import android.database.Cursor;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.provider.ContactsContract;import android.view.View;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.ArrayAdapter;import android.widget.ListView;import android.widget.SimpleAdapter;public class ContactActivity extends Activity {		private ArrayList<String> contactNames=null;	private ArrayList<HashMap<String, Object>> listitem=new ArrayList<HashMap<String,Object>>();		private ArrayList<ArrayList<String>> contactDetails=null;		private Handler handler=null;	private  ProgressDialog pd=null;		@Override	protected void onCreate(Bundle savedInstanceState) {		// TODO Auto-generated method stub		super.onCreate(savedInstanceState);				setContentView(R.layout.contact);				pd=ProgressDialog.show(this, null, "正在拼命读取通讯录，请等待...");						handler=new Handler(){			@Override			public void handleMessage(Message msg) {				// TODO Auto-generated method stub				super.handleMessage(msg);				if(msg.what==0x1234 && contactNames!=null){					ListView content=(ListView) findViewById(R.id.contactLV);										SimpleAdapter listItemAdapter = new SimpleAdapter(ContactActivity.this,listitem, R.layout.contactlistitem, new String[] {"contactlistitem_avatar","contactlistitem_name", "contactlistitem_phone","contactlistitem_cloud"}, new int[] {R.id.contactlistitem_avatar,R.id.contactlistitem_name,R.id.contactlistitem_phone,R.id.contactlistitem_cloud});										content.setAdapter(listItemAdapter);										content.setOnItemClickListener(new OnItemClickListener() {						@Override						public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {							// TODO Auto-generated method stub							int row=arg2;							System.out.println(contactNames.get(row)+" selected");							Intent intent=new Intent(ContactActivity.this,ContactDetailActivity.class);							intent.putExtra("contact_name", contactNames.get(row));							intent.putExtra("contact_detail", contactDetails.get(row));							startActivity(intent);						}											});				}				pd.dismiss();			}		};				Thread thread=new Thread(new Runnable() {						@Override			public void run() {				// TODO Auto-generated method stub				getContacts();				handler.sendEmptyMessage(0x1234);			}		});		thread.start();																	}		private void getContacts(){		if(contactNames==null||contactDetails==null){			             			contactNames=new ArrayList<String>();			contactDetails=new ArrayList<ArrayList<String>>();			Cursor cursor=getContentResolver().query(ContactsContract.Contacts.CONTENT_URI, null, null, null, null);						while(cursor.moveToNext()){				HashMap<String, Object> map = new HashMap<String, Object>();  	            map.put("contactlistitem_avatar", R.drawable.contactlistitem_avatar);//图像资源的ID 				String contactID=cursor.getString(cursor.getColumnIndex(ContactsContract.Contacts._ID));				String name=cursor.getString(cursor.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME));				contactNames.add(name);				map.put("contactlistitem_name", name);                //phone number 				Cursor phones=getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI, null, ContactsContract.CommonDataKinds.Phone.CONTACT_ID+"="+contactID, null,null);				ArrayList<String> detail=new ArrayList<String>();				while(phones.moveToNext()){					String number=phones.getString(phones.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));					detail.add("phone: " + number);				}				if(detail.isEmpty()){					map.put("contactlistitem_phone", "");				}else{					map.put("contactlistitem_phone", detail.get(0));				}								phones.close();				//email address				Cursor emails=getContentResolver().query(ContactsContract.CommonDataKinds.Email.CONTENT_URI, null, ContactsContract.CommonDataKinds.Phone.CONTACT_ID+"="+contactID, null,null);				while(emails.moveToNext()){					String email=emails.getString(emails.getColumnIndex(ContactsContract.CommonDataKinds.Email.DATA));					detail.add("email: " + email);				}				emails.close();								contactDetails.add(detail);				map.put("contactlistitem_cloud", R.drawable.contactlistitem_cloud_yes);	            listitem.add(map);  			}			cursor.close();            		}	}			public void onClickOfContactlistitemCloud(View source){		System.out.println("contact list item cloud click");							}				}
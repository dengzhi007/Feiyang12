package com.qihoo.feiyang.contact;import java.io.InputStream;import java.util.ArrayList;import java.util.HashMap;import com.qihoo.feiyang.R;import com.qihoo.feiyang.util.GlobalsUtil;import android.app.Activity;import android.app.ProgressDialog;import android.content.ContentUris;import android.content.Context;import android.content.Intent;import android.database.Cursor;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.net.Uri;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.provider.ContactsContract;import android.provider.ContactsContract.CommonDataKinds.Phone;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.ArrayAdapter;import android.widget.BaseAdapter;import android.widget.Button;import android.widget.ImageView;import android.widget.ListView;import android.widget.SimpleAdapter;import android.widget.TextView;public class ContactActivity extends Activity {    private int rowselect=0;		private Handler handler=null;	private  ProgressDialog pd=null;		@Override	protected void onCreate(Bundle savedInstanceState) {		// TODO Auto-generated method stub		super.onCreate(savedInstanceState);				setContentView(R.layout.contact);		handler=new Handler(){			@Override			public void handleMessage(Message msg) {				// TODO Auto-generated method stub				super.handleMessage(msg);				if(msg.what==0x1234 && GlobalsUtil.contactNames!=null){					ListView content=(ListView) findViewById(R.id.contactLV);										//SimpleAdapter listItemAdapter = new SimpleAdapter(ContactActivity.this,listitem, R.layout.contactlistitem, new String[] {"contactlistitem_avatar","contactlistitem_name", "contactlistitem_phone","contactlistitem_cloud"}, new int[] {R.id.contactlistitem_avatar,R.id.contactlistitem_name,R.id.contactlistitem_phone,R.id.contactlistitem_cloud});					MyAdapter listItemAdapter= new MyAdapter(ContactActivity.this);					content.setAdapter(listItemAdapter);										content.setOnItemClickListener(new OnItemClickListener() {						@Override						public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {							// TODO Auto-generated method stub							rowselect=arg2;							System.out.println(GlobalsUtil.contactNames.get(rowselect)+" selected");							Intent intent=new Intent(ContactActivity.this,ContactDetailActivity.class);							intent.putExtra("contact_name", GlobalsUtil.contactNames.get(rowselect));							//intent.putExtra("contact_detail", contactDetails.get(rowselect));							startActivity(intent);						}											});													}				pd.dismiss();			}		};								if(GlobalsUtil.contactGot){						ListView content=(ListView) findViewById(R.id.contactLV);						//SimpleAdapter listItemAdapter = new SimpleAdapter(ContactActivity.this,listitem, R.layout.contactlistitem, new String[] {"contactlistitem_avatar","contactlistitem_name", "contactlistitem_phone","contactlistitem_cloud"}, new int[] {R.id.contactlistitem_avatar,R.id.contactlistitem_name,R.id.contactlistitem_phone,R.id.contactlistitem_cloud});			MyAdapter listItemAdapter= new MyAdapter(this);			content.setAdapter(listItemAdapter);						content.setOnItemClickListener(new OnItemClickListener() {				@Override				public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {					// TODO Auto-generated method stub										rowselect=arg2;					System.out.println("contact list item "+rowselect+" click");					System.out.println(GlobalsUtil.contactNames.get(rowselect)+" selected");										Intent intent=new Intent(ContactActivity.this,ContactDetailActivity.class);										intent.putExtra("contact_select_index", rowselect);										startActivity(intent);				}							});					}else{						pd=ProgressDialog.show(this, null, "正在拼命读取通讯录，请等待...");						Thread thread=new Thread(new Runnable() {								@Override				public void run() {					// TODO Auto-generated method stub					while(!GlobalsUtil.contactGot){											}					handler.sendEmptyMessage(0x1234);				}			});			thread.start();					}			}	/*	private void getContacts(){		if(contactNames==null||contactDetails==null){						System.out.println("getting contacts in contact activity...");			contactNames=new ArrayList<String>();			contactDetails=new ArrayList<ArrayList<String>>();						Cursor cursor=getContentResolver().query(ContactsContract.Contacts.CONTENT_URI, null, null, null, null);						while(cursor.moveToNext()){								String contactID=cursor.getString(cursor.getColumnIndex(ContactsContract.Contacts._ID));				String name=cursor.getString(cursor.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME));				contactNames.add(name);				                //phone number 				Cursor phones=getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI, null, ContactsContract.CommonDataKinds.Phone.CONTACT_ID+"="+contactID, null,null);				ArrayList<String> detail=new ArrayList<String>();				while(phones.moveToNext()){					String number=phones.getString(phones.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));					detail.add("phone: " + number);				}								phones.close();				//email address				Cursor emails=getContentResolver().query(ContactsContract.CommonDataKinds.Email.CONTENT_URI, null, ContactsContract.CommonDataKinds.Phone.CONTACT_ID+"="+contactID, null,null);				while(emails.moveToNext()){					String email=emails.getString(emails.getColumnIndex(ContactsContract.CommonDataKinds.Email.DATA));					detail.add("email: " + email);				}				emails.close();								contactDetails.add(detail);							}			cursor.close();            		}	}			*/	private void getContactDetail(Long contactId){			}		private class MyAdapter extends BaseAdapter{				private LayoutInflater inflater;				public MyAdapter(Context context){			this.inflater = LayoutInflater.from(context);		}		@Override		public int getCount() {			// TODO Auto-generated method stub			return GlobalsUtil.contactNames.size();		}		@Override		public Object getItem(int position) {			// TODO Auto-generated method stub			return null;		}		@Override		public long getItemId(int position) {			// TODO Auto-generated method stub			return position;		}		@Override		public View getView(int position, View convertView, ViewGroup parent) {			// TODO Auto-generated method stub			View v = inflater.inflate(R.layout.contactlistitem, null);						ImageView avatar = (ImageView) v.findViewById(R.id.contactlistitem_avatar);			TextView name = (TextView) v.findViewById(R.id.contactlistitem_name);			TextView phone = (TextView) v.findViewById(R.id.contactlistitem_phone);			Button cloud = (Button) v.findViewById(R.id.contactlistitem_cloud);			if(position%2==0){				cloud.setBackgroundResource(R.drawable.contactlistitem_cloud_no);			}						avatar.setImageBitmap(GlobalsUtil.avatars.get(position));			name.setText(GlobalsUtil.contactNames.get(position));			phone.setText(GlobalsUtil.phoneNums.get(position));									cloud.setTag(position);						cloud.setOnClickListener(new View.OnClickListener(){				@Override				public void onClick(View v) {					// TODO Auto-generated method stub					rowselect=(Integer) v.getTag();					System.out.println("contact list item "+rowselect+" btn click" );					Intent intent=new Intent(ContactActivity.this,ContactMyCardActivity.class);										intent.putExtra("contact_name", GlobalsUtil.contactNames.get(rowselect));					intent.putExtra("phone_number", GlobalsUtil.phoneNums.get(rowselect));										startActivity(intent);				}							});			return v;		}			}		public void onClickOfBackward(View source) {				finish();			}}